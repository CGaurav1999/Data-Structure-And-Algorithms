1) Reverse a Linked List
2) Detect Cycle in a Linked List
3) Merge Two Sorted Lists
4) Remove Nth Node From End of List
5) Find Middle of Linked List
6) Intersection of Two Linked Lists
7) Palindrome Linked List
8) Rotate List
Sort a Linked List
 Flatten a Multilevel Doubly Linked List
 Copy List with Random Pointer
 Add Two Numbers Represented by Linked Lists
 Reverse Nodes in k-Group
 LRU Cache Implementation using Linked List and HashMap
Design-based question, focus on data structures and algorithms for cache eviction policies. Design a Doubly Linked List
Implement basic operations (insert, delete, search) for a doubly linked list. Detect and Remove Loop in a Linked List
 Clone a Linked List with Next and Random Pointer
 Swap Nodes in Pairs
 Reverse Linked List II
 Convert Sorted List to Binary Search Tree